openapi: 3.0.2
info:
  title: Help Center API
  description: Help Center v2 REST API
  version: 2.0.0
  tags:
    - User Subscriptions
    - Locales
    - Tickets
paths:
  /api/v2/tickets/count:
    get:
      operationId: CountTickets
      tags:
        - Tickets
      summary: Count Tickets
      description: |-
        Returns an approximate count of tickets in the account. If the count exceeds 100,000, it is updated every 24 hours.

        `ccd` lists tickets that the specified user is cc'd on.

        The `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.

        **Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.
        This indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.

        #### Allowed For
        * Agents
      responses:
        "200":
          description: Count of tickets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketCountResponse'
              examples:
                default:
                  $ref: '#/components/examples/TicketCountResponseExample'
  /api/v2/locales:
    get:
      operationId: ListLocales
      tags:
        - Locales
      summary: List Locales
      description: |
        Lists the translation locales available for the account.
        
        Allowed for anyone
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesResponse'
              examples:
                default:
                  $ref: '#/components/examples/LocalesResponseExample'
  /api/v2/help_center/{locale}/articles:
    parameters:
      - $ref: '#/components/parameters/OptionalLocale'
    get:
      operationId: ListArticles
      tags:
        - Articles
      summary: List Articles
      parameters:
        - name: sort_by
          in: query
          description: Sorts the articles by one of the accepted values
          required: false
          schema:
            type: string
            enum:
              - position
              - title
              - created_at
              - updated_at
        - name: sort_order
          in: query
          description: Selects the order of the results.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: start_time
          in: query
          required: false
          description: You can use the incremental article endpoint to list all the articles that were updated since a certain date and time.
          schema:
            type: integer
            format: int64
          example: 1404345231
        - name: label_names
          required: false
          in: query
          description: Only articles that have all the labels are returned.
          schema:
            type: string
          example: photos,camera
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesResponse'
              examples:
                default:
                  $ref: '#/components/examples/ArticlesResponseExample'
  /api/v2/help_center/user_segments:
    get:
      operationId: ListUserSegments
      tags:
        - User Segments
      summary: List User Segments
      description: |
        Some user segments can only be applied to sections and topics on certain Guide plans. For instance, user 
        segments with a `user_type` of `"staff"` cannot be applied to sections and topics on accounts on the Guide 
        Lite plan or the Suite Team plan. <br>
        Allowed for Help Center managers
      parameters:
        - name: built_in
          in: query
          description: Only built_in user segments if true, only custom user segments if false
          allowEmptyValue: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegmentsResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserSegmentsResponseExample'
    post:
      operationId: CreateUserSegment
      tags:
        - User Segments
      summary: Create User Segment
      description: |
        Allowed for Help Center managers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_segment:
                  $ref: '#/components/schemas/UserSegment'
      responses:
        "201":
          description: Created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegmentResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserSegmentResponseExample'
        "400":
          description: Bad request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/BadRequestCreateUserSegment'
  /api/v2/help_center/user_segments/{user_segment_id}:
    parameters:
      - $ref: '#/components/parameters/UserSegmentId'
    get:
      operationId: ShowUserSegment
      tags:
        - User Segments
      summary: Show User Segment
      description: |
        Allowed for Help Center managers
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegmentResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserSegmentResponseExample'
    put:
      operationId: UpdateUserSegment
      tags:
        - User Segments
      summary: Update User Segment
      description: |
        Allowed for Help Center managers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_segment:
                  $ref: '#/components/schemas/UserSegment'
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegmentResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserSegmentResponseExample'
        "400":
          description: Bad request Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
              examples:
                default:
                  $ref: '#/components/examples/BadRequestUpdateUserSegment'
    delete:
      operationId: DeleteUserSegment
      tags:
        - User Segments
      summary: Delete User Segment
      description: |
        Allowed for Help Center managers
      responses:
        "204":
          description: Response when the  was deleted
  /api/v2/help_center/user_segments/{user_segment_id}/sections:
    parameters:
      - $ref: '#/components/parameters/UserSegmentId'
    get:
      operationId: ListUserSegmentSections
      tags:
        - User Segments
      summary: List Sections with User Segment
      description: |
        Lists the sections that use the specified user segment.

        Allowed for Help Center managers
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionsResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserSegmentSectionsResponseExample'
  /api/v2/help_center/user_segments/{user_segment_id}/topics:
    parameters:
      - $ref: '#/components/parameters/UserSegmentId'
    get:
      operationId: ListUserSegmentTopics
      tags:
        - User Segments
      summary: List Topics with User Segment
      description: |
        Lists the topics that use the specified user segment.

        This endpoint supports pagination as described in [Pagination](developer.zendesk.com/api-reference/help_center/help-center-api/help-center-api/#pagination).

        #### Allowed for

        * Help Center managers

        #### Pagination

        * Cursor pagination (recommended)
        * Offset pagination

        See [Pagination](developer.zendesk.com/api-reference/introduction/pagination/).
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserSegmentTopicsResponseExample'
  /api/v2/tickets:
    get:
      operationId: ListTickets
      tags:
        - Tickets
      summary: List Tickets
      parameters:
        - name: external_id
          in: query
          description: Lists tickets by external id. External ids don't have to be unique for each ticket. As a result, the request may return multiple tickets with the same external id.
          schema:
            type: string
      responses:
        "200":
          description: List tickets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketsResponse'
              examples:
                default:
                  $ref: '#/components/examples/TicketsResponseExample'
    post:
      operationId: CreateTicket
      tags:
        - Tickets
      summary: Create Ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketCreateRequest'
            examples:
              default:
                $ref: '#/components/examples/TicketCreateRequestExample'
      responses:
        "201":
          description: Create ticket
          headers:
            Location:
              description: The URL of the created ticket
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
              examples:
                default:
                  $ref: '#/components/examples/TicketResponseExample'
  /api/v2/tickets/{ticket_id}:
    get:
      operationId: ShowTicket
      tags:
        - Tickets
      summary: Show Ticket
      description: |-
        Returns a number of ticket properties though not the ticket comments. To get the comments, use [List Comments](developer.zendesk.com/api-reference/ticketing/tickets/ticket_comments/#list-comments)

        #### Allowed For
        * Agents
      parameters:
        - $ref: '#/components/parameters/TicketId'
      responses:
        "200":
          description: Ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
              examples:
                default:
                  $ref: '#/components/examples/TicketResponseExample'
components:
  schemas:
    Attachment:
      type: object
      description: A file represented as an [Attachment](developer.zendesk.com/api-reference/ticketing/tickets/ticket-attachments/) object
      allOf:
        - $ref: '#/components/schemas/AttachmentBase'
        - $ref: '#/components/schemas/AttachmentThumbnails'
      example:
        content_type: image/png
        content_url: https://company.zendesk.com/attachments/my_funny_profile_pic.png
        file_name: my_funny_profile_pic.png
        id: 928374
        size: 166144
        thumbnails:
          - content_type: image/png
            content_url: https://company.zendesk.com/attachments/my_funny_profile_pic_thumb.png
            file_name: my_funny_profile_pic_thumb.png
            id: 928375
            size: 58298
    AttachmentBase:
      type: object
      properties:
        content_type:
          type: string
          description: 'The content type of the image. Example value: "image/png"'
          readOnly: true
        content_url:
          type: string
          description: A full URL where the attachment image file can be downloaded. The file may be hosted externally so take care not to inadvertently send Zendesk authentication credentials. See [Working with url properties](/documentation/ticketing/managing-tickets/working-with-url-properties)
          readOnly: true
        deleted:
          type: boolean
          description: If true, the attachment has been deleted
          readOnly: true
        file_name:
          type: string
          description: The name of the image file
          readOnly: true
        height:
          type: string
          description: The height of the image file in pixels. If height is unknown, returns null
          readOnly: true
        id:
          type: integer
          description: Automatically assigned when created
          readOnly: true
        inline:
          type: boolean
          description: |
            If true, the attachment is excluded from the attachment list and the attachment's URL
            can be referenced within the comment of a ticket. Default is false
          readOnly: true
        malware_access_override:
          type: boolean
          description: If true, you can download an attachment flagged as malware. If false, you can't download such an attachment.
          readOnly: true
        malware_scan_result:
          type: string
          description: 'The result of the malware scan. There is a delay between the time the attachment is uploaded and when the malware scan is completed. Usually the scan is done within a few seconds, but high load conditions can delay the scan results. Possible values: "malware_found", "malware_not_found", "failed_to_scan", "not_scanned"'
          readOnly: true
        mapped_content_url:
          type: string
          description: The URL the attachment image file has been mapped to
          readOnly: true
        size:
          type: integer
          description: The size of the image file in bytes
          readOnly: true
        url:
          type: string
          description: A URL to access the attachment details
          readOnly: true
        width:
          type: string
          description: The width of the image file in pixels. If width is unknown, returns null
          readOnly: true
    AttachmentThumbnails:
      type: object
      properties:
        thumbnails:
          type: array
          description: An array of attachment objects. Note that photo thumbnails do not have thumbnails
          items:
            $ref: '#/components/schemas/AttachmentBase'
          readOnly: true
    ArticleAttachment:
      type: object
      properties:
        article_id:
          type: integer
          format: int64
          description: The associated article, if present
        content_type:
          type: string
          description: 'The file type. Example: image/png'
          readOnly: true
        content_url:
          type: string
          description: URL where the attachment file can be downloaded
          readOnly: true
        created_at:
          type: string
          description: The time the article attachment was created
          readOnly: true
        file:
          type: object
          description: File to upload, applicable only during creation.
        file_name:
          type: string
          description: The file name
          readOnly: true
        guide_media_id:
          type: string
          description: Unique identifier for the guide-media to associate with this attachment, applicable only during creation.
        id:
          type: integer
          format: int64
          description: Assigned ID when the article attachment is created
          readOnly: true
        inline:
          type: boolean
          description: The attached file is shown in the admin interface for inline attachments. Its URL can be referenced in the article's HTML body. Inline attachments are image files directly embedded in the article body. If false, the attachment is listed in the list of attachments. The default value is false
        locale:
          type: string
          description: The locale of translation that the attachment will be attached to and can only be set on inline attachments
        size:
          type: integer
          format: int64
          description: The attachment file size in bytes
          readOnly: true
        updated_at:
          type: string
          description: The time the article attachment was last updated
          readOnly: true
        url:
          type: string
          description: The URL of the article attachment
          readOnly: true
      example:
        article_id: 23
        content_type: application/pdf
        content_url: https://company.zendesk.com/hc/article_attachments/200109629
        created_at: "2012-04-04T09:14:57Z"
        file_name: party_invitation.pdf
        id: 1428
        inline: false
        locale: en_us
        size: 58298
    ArticleAttachmentResponse:
      type: object
      properties:
        article_attachment:
          $ref: '#/components/schemas/ArticleAttachment'
    ArticleAttachmentsResponse:
      type: object
      properties:
        article_attachments:
          type: array
          items:
            $ref: '#/components/schemas/ArticleAttachment'
    Article:
      type: object
      properties:
        author_id:
          type: integer
          format: int64
          description: The id of the user who wrote the article (set to the user who made the request on create by default)
        body:
          type: string
          description: HTML body of the article. Unsafe tags and attributes may be removed before display. For a list of safe tags and attributes, see [Allowing unsafe HTML in Help Center articles](https://support.zendesk.com/hc/en-us/articles/115015895948) in Zendesk help
        comments_disabled:
          type: boolean
          description: True if comments are disabled; false otherwise
        content_tag_ids:
          type: array
          description: The list of content tags attached to the article
          items:
            type: string
        created_at:
          type: string
          description: The time the article was created
          readOnly: true
        draft:
          type: boolean
          description: True if the translation for the current locale is a draft; false otherwise. false by default. Can be set when creating but not when updating. For updating, see Translations
          readOnly: true
        edited_at:
          type: string
          description: The time the article was last edited in its displayed locale
          readOnly: true
        html_url:
          type: string
          description: The url of the article in Help Center
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the article is created
          readOnly: true
        label_names:
          type: array
          description: An array of label names associated with this article. By default no label names are used. Only available on certain plans
          items:
            type: string
        locale:
          type: string
          description: The locale that the article is being displayed in
        outdated:
          type: boolean
          description: Deprecated. Always false because the source translation is always the most up-to-date translation
          readOnly: true
        outdated_locales:
          type: array
          description: Locales in which the article was marked as outdated
          items:
            type: string
          readOnly: true
        permission_group_id:
          type: integer
          format: int64
          description: The id of the permission group which defines who can edit and publish this article
        position:
          type: integer
          format: int64
          description: The position of this article in the article list. 0 by default
        promoted:
          type: boolean
          description: True if this article is promoted; false otherwise. false by default
        section_id:
          type: integer
          format: int64
          description: The id of the section to which this article belongs
        source_locale:
          type: string
          description: The source (default) locale of the article
          readOnly: true
        title:
          type: string
          description: The title of the article
        updated_at:
          type: string
          description: The time the article was last updated
          readOnly: true
        url:
          type: string
          description: The API url of the article
          readOnly: true
        user_segment_id:
          type: integer
          format: int64
          description: The id of the user segment which defines who can see this article. Set to null to make it accessible to everyone. Either user_segment_id or user_segment_ids must be specified
          nullable: true
        user_segment_ids:
          type: array
          description: List of user segment ids which define who can view this article. Set to an empty list to make it accessible to everyone. For Enterprise plans only this may contain more than one user_segment_id. Either user_segment_id or user_segment_ids must be specified
        vote_count:
          type: integer
          format: int64
          description: The total number of upvotes and downvotes
          readOnly: true
        vote_sum:
          type: integer
          format: int64
          description: The sum of upvotes (+1) and downvotes (-1), which may be positive or negative
          readOnly: true
      example:
        author_id: 3465
        comments_disabled: false
        id: 1635
        locale: en
        permission_group_id: 13
        title: The article
        user_segment_id: 12
      required:
        - title
        - locale
        - permission_group_id
    ArticleRequest:
      type: object
      properties:
        article:
          type: object
          properties:
            body:
              type: string
              example: Use a tripod
            locale:
              type: string
              example: en-us
            permission_group_id:
              type: integer
              format: int64
              default: 0
              example: 56
            title:
              type: string
              example: Taking photos in low light
            user_segment_id:
              type: integer
              format: int64
              example: 123
          required:
            - title
            - locale
            - user_segment_id
            - permission_group_id
        notify_subscribers:
          type: boolean
          example: false
      required:
        - article
    ArticleResponse:
      type: object
      properties:
        article:
          $ref: '#/components/schemas/Article'
    ArticleSearchResponse:
      type: object
      properties:
        result_type:
          type: string
          description: For articles, always the string `article`
          default: article
          readOnly: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        snippet:
          type: string
          description: |
            The portion of an article that is relevant to the search query, with matching words or phrases delimited by <em></em> tags. Example: a query for `carrot potato` might return the snippet `...don't confuse <em>carrots</em> with <em>potatoes</em>...`
          readOnly: true
    ArticlesResponse:
      type: object
      properties:
        articles:
          type: array
          items:
            $ref: '#/components/schemas/Article'
    BadRequestErrorResponse:
      type: object
      properties:
        errors:
          type: object
          additionalProperties: true
      example:
        errors:
          field_name_with_error:
            - cannot process this field
    CategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: The time at which the category was created
          readOnly: true
        description:
          type: string
          description: The description of the category
        html_url:
          type: string
          description: The url of this category in Help Center
        #          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when creating categories
        #          readOnly: true
        locale:
          type: string
          description: The locale where the category is displayed
        name:
          type: string
          description: The name of the category
        outdated:
          type: boolean
          description: Whether the category is out of date
        #          readOnly: true
        position:
          type: integer
          format: int64
          description: The position of this category relative to other categories
        source_locale:
          type: string
          description: The source (default) locale of the category
        #          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The time at which the category was last updated
        #          readOnly: true
        url:
          type: string
          description: The API url of this category
      #          readOnly: true
      example:
        description: ""
        html_url: https://company.zendesk.com/hc/en-us/categories/354362577
        id: 1635
        locale: en-us
        name: Self Help Articles
        source_locale: en-us
        url: https://company.zendesk.com/api/v2/help_center/categories/354362577
      required:
        - id
        - name
        - locale
    CategoryResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
    Collaborator:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
      example:
        email: someone@example.com
        name: Someone Special
    Comment:
      type: object
      properties:
        author_id:
          type: integer
          format: int64
          description: The id of the author of this comment. Writable on create by Help Center managers. See [Create Comment](#create-comment)
        body:
          type: string
          description: The comment made by the author. See [User content](#user-content)
        created_at:
          type: string
          description: The time the comment was created. Writable on create by Help Center managers. See [Create Comment](#create-comment)
        html_url:
          type: string
          description: The url at which the comment is presented in Help Center
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the comment is created
          readOnly: true
        locale:
          type: string
          description: The locale in which this comment was made
        non_author_editor_id:
          type: integer
          format: int64
          description: The user id of whoever performed the most recent (if any) non-author edit. A non-author edit consists of an edit make by a user other than the author that creates or updates the `body` or `author_id`. Note that only edits made after May 17, 2021 will be reflected in this field. If no non-author edits have occured since May 17, 2021, then this field will be `null`.
          readOnly: true
        non_author_updated_at:
          type: string
          format: date-time
          description: When the comment was last edited by a non-author user
          readOnly: true
        source_id:
          type: integer
          format: int64
          description: The id of the item on which this comment was made
          readOnly: true
        source_type:
          type: string
          description: The type of the item on which this comment was made. Currently only supports 'Article'
          readOnly: true
        updated_at:
          type: string
          description: The time at which the comment was last updated
          readOnly: true
        url:
          type: string
          description: The API url of this comment
          readOnly: true
        vote_count:
          type: integer
          format: int64
          description: The total number of upvotes and downvotes
          readOnly: true
        vote_sum:
          type: integer
          format: int64
          description: The sum of upvotes (+1) and downvotes (-1), which may be positive or negative
          readOnly: true
      example:
        author_id: 3465
        body: Thanks for your help!
        created_at: "2012-04-04T09:14:57Z"
        id: 1635
        locale: en-us
        source_id: 65466
        source_type: Article
      required:
        - body
        - locale
    CommentResponse:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/Comment'
    CommentsResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    CommunityPostSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    ContentSubscription:
      type: object
      properties:
        content_id:
          type: integer
          format: int64
          description: The id of the subscribed item
          readOnly: true
        content_type:
          type: string
          description: The type of the subscribed item
          readOnly: true
        created_at:
          type: string
          description: The time at which the subscription was created
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the subscription is created
          readOnly: true
        include_comments:
          type: boolean
          description: Subscribe also to article comments / post comments. Only for section / topic subscriptions.
          readOnly: true
        locale:
          type: string
          description: The locale of the subscribed item
          readOnly: true
        source_locale:
          type: string
          description: Used only for [Create Section Subscription](#create-section-subscription) and [Create Article Subscription](#create-article-subscription), where it's mandatory. Selects the locale of the content to be subscribed
        updated_at:
          type: string
          description: The time at which the subscription was last updated
          readOnly: true
        url:
          type: string
          description: The API url of the subscription
          readOnly: true
        user_id:
          type: integer
          format: int64
          description: The id of the user who has this subscription
          readOnly: true
      example:
        content_id: 65466
        created_at: "2012-04-04T09:14:57Z"
        id: 1635
        locale: en-us
        user_id: 3465
      required:
        - locale
    ContentSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/ContentSubscription'
    CreateUserImageResponse:
      type: object
      properties:
        user_image:
          type: object
          properties:
            content_type:
              type: string
            path:
              type: string
            size:
              type: number
    CustomField:
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomField'
      properties:
        properties:
          $ref: '#/components/schemas/CustomFieldProperties'
      example:
        active: true
        created_at: "2022-09-07T23:21:59Z"
        description: Make
        id: 4398096842879
        key: make
        position: 0
        properties:
          autoincrement_enabled: true
          autoincrement_next_sequence: 1
          autoincrement_padding: 5
          autoincrement_prefix: 'Order # '
          is_unique: false
        raw_description: Make
        raw_title: Make
        regexp_for_validation: null
        system: false
        title: Make
        type: text
        updated_at: "2022-09-07T23:22:00Z"
        url: https://company.zendesk.com/api/v2/custom_objects/car/fields/4398096842879.json
    CustomFieldProperties:
      type: object
      description: A set of properties which describe the standard::name field's autonumbering and uniqueness behavior. Autonumbering and uniqueness can't be used together
      properties:
        autoincrement_enabled:
          type: boolean
          description: Turns autonumbering on or off
        autoincrement_next_sequence:
          type: integer
          description: The next number in the autonumbering sequence. It can't be negative or less than the current autonumbering value
        autoincrement_padding:
          type: integer
          description: Sets the number of digits for autogenerated numbers. Valid values are 0-9
        autoincrement_prefix:
          type: string
          description: A prefix to autogenerated numbers that can't exceed 30 characters
        is_unique:
          type: boolean
          description: Turns uniqueness on or off
      example:
        autoincrement_enabled: true
        autoincrement_next_sequence: 1
        autoincrement_padding: 5
        autoincrement_prefix: 'Order # '
        is_unique: false
    EmailCC:
      type: object
      allOf:
        - $ref: '#/components/schemas/Follower'
        - type: object
          properties:
            action:
              type: string
              enum:
                - put
                - delete
            user_email:
              type: string
            user_id:
              type: string
            user_name:
              type: string
    Follower:
      type: object
      properties:
        action:
          type: string
          enum:
            - put
            - delete
        user_email:
          type: string
          format: email
        user_id:
          type: string
    HelpCenterLocalesResponse:
      type: object
      properties:
        locales:
          type: array
          items:
            type: string
    HelpCenterSession:
      type: object
      properties:
        csrf_token:
          type: string
    HelpCenterSessionResponse:
      type: object
      properties:
        current_session:
          $ref: '#/components/schemas/HelpCenterSession'
    Label:
      type: object
      properties:
        created_at:
          type: string
          description: The time at which the label was created
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the label is created
          readOnly: true
        name:
          type: string
          description: The actual name of the label
        updated_at:
          type: string
          description: The time at which the label was last updated
          readOnly: true
        url:
          type: string
          description: The API url of this label
          readOnly: true
      example:
        created_at: "2012-04-04T09:14:57Z"
        id: 2003
        name: instructions
      required:
        - name
    LabelResponse:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/Label'
    LabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    Locale:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: The ISO 8601 formatted date-time the locale was created
          readOnly: true
        id:
          type: integer
          format: int64
          description: The unique ID of the locale
          readOnly: true
        locale:
          type: string
          description: The name of the locale
          readOnly: true
        name:
          type: string
          description: The name of the language
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The ISO 8601 formatted date-time when the locale was last updated
          readOnly: true
        url:
          type: string
          description: The URL of the locale record
          readOnly: true
      example:
        created_at: "2009-07-20T22:55:29Z"
        id: 1
        locale: en-US
        name: English
        updated_at: "2011-05-05T10:38:52Z"
        url: https://company.zendesk.com/api/v2/locales/en-US.json
    LocaleResponse:
      type: object
      properties:
        locale:
          $ref: '#/components/schemas/Locale'
    LocalesResponse:
      type: object
      properties:
        locales:
          type: array
          items:
            $ref: '#/components/schemas/Locale'
    LocalesWithDefaultResponse:
      type: object
      properties:
        default_locale:
          type: string
        locales:
          type: array
          items:
            type: string
    PostComment:
      type: object
      properties:
        author_id:
          type: integer
          format: int64
          description: The id of the author of the comment. Writable on create by Help Center managers. See [Create Post Comment](#create-post-comment)
        body:
          type: string
          description: The comment made by the author. See [User content](#user-content)
        created_at:
          type: string
          description: When the comment was created. Writable on create by Help Center managers. See [Create Post Comment](#create-post-comment)
        html_url:
          type: string
          description: The community url of the comment
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the comment is created
          readOnly: true
        non_author_editor_id:
          type: integer
          format: int64
          description: The user id of whoever performed the most recent (if any) non-author edit. A non-author edit consists of an edit make by a user other than the author that creates or updates the `body`. Note that only edits made after May 17, 2021 will be reflected in this field. If no non-author edits have occured since May 17, 2021, then this field will be `null`.
          readOnly: true
        non_author_updated_at:
          type: string
          format: date-time
          description: When the comment was last edited by a non-author user
          readOnly: true
        official:
          type: boolean
          description: Whether the comment is marked as official
        post_id:
          type: integer
          format: int64
          description: The id of the post on which the comment was made
          readOnly: true
        updated_at:
          type: string
          description: When the comment was last updated
          readOnly: true
        url:
          type: string
          description: The API url of the comment
          readOnly: true
        vote_count:
          type: integer
          format: int64
          description: The total number of upvotes and downvotes
          readOnly: true
        vote_sum:
          type: integer
          format: int64
          description: The sum of upvotes (+1) and downvotes (-1), which may be positive or negative
          readOnly: true
      example:
        author_id: 89567
        body: My printer is on fire!
        id: 35467
        official: false
        vote_count: 15
        vote_sum: 10
      required:
        - body
    PostCommentResponse:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/PostComment'
    PostCommentsResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
    Post:
      type: object
      properties:
        author_id:
          type: integer
          format: int64
          description: The id of the author of the post. *Writable on create by Help Center managers -- see Create Post
          readOnly: true
        closed:
          type: boolean
          description: Whether further comments are allowed
        comment_count:
          type: integer
          format: int64
          description: The number of comments on the post
          readOnly: true
        content_tag_ids:
          type: array
          description: The list of content tags attached to the post
          items:
            type: integer
            format: int64
        created_at:
          type: string
          format: date-time
          description: When the post was created. Writable on create by Help Center managers -- see [Create Post](#create-post)
          readOnly: true
        details:
          type: string
          description: The details of the post made by the author. See [User content](#user-content)
        featured:
          type: boolean
          description: Whether the post is featured
        follower_count:
          type: integer
          format: int64
          description: The number of followers of the post
          readOnly: true
        html_url:
          type: string
          description: The community url of the post
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the post is created
          readOnly: true
        non_author_editor_id:
          type: integer
          format: int64
          description: The user id of whoever performed the most recent (if any) non-author edit. A non-author edit consists of an edit make by a user other than the author that creates or updates the `title` or `details`. Note that only edits made after May 17, 2021 will be reflected in this field. If no non-author edits have occured since May 17, 2021, then this field will be `null`.
          readOnly: true
        non_author_updated_at:
          type: string
          format: date-time
          description: When the post was last edited by a non-author user
          readOnly: true
        pinned:
          type: boolean
          description: When true, pins the post to the top of its topic
        status:
          type: string
          description: 'The status of the post. Possible values: "planned", "not_planned" , "answered", or "completed"'
        title:
          type: string
          description: The title of the post
        topic_id:
          type: integer
          format: int64
          description: The id of the topic that the post belongs to
        updated_at:
          type: string
          format: date-time
          description: When the post was last updated
          readOnly: true
        url:
          type: string
          description: The API url of the post
          readOnly: true
        vote_count:
          type: integer
          format: int64
          description: The total number of upvotes and downvotes
          readOnly: true
        vote_sum:
          type: integer
          format: int64
          description: The sum of upvotes (+1) and downvotes (-1), which may be positive or negative
          readOnly: true
      example:
        author_id: 3465
        featured: true
        id: 1635
        title: The post
      required:
        - title
    PostResponse:
      type: object
      properties:
        post:
          $ref: '#/components/schemas/Post'
    PostsResponse:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    RequestUserImageUploadResponse:
      type: object
      properties:
        upload:
          type: object
          properties:
            headers:
              type: object
              additionalProperties: true
            token:
              type: string
            url:
              type: string
    Search:
      type: object
      properties:
        results:
          type: array
          description: An array with the base articles or community posts
          items:
            oneOf:
              - $ref: '#/components/schemas/Article'
              - $ref: '#/components/schemas/PostComment'
      required:
        - results
    Section:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
          description: The id of the category to which this section belongs
        created_at:
          type: string
          description: The time at which the section was created
          readOnly: true
        description:
          type: string
          description: The description of the section
        html_url:
          type: string
          description: The url of this section in HC
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when creating subscriptions
          readOnly: true
        locale:
          type: string
          description: The locale in which the section is displayed
        name:
          type: string
          description: The name of the section
        outdated:
          type: boolean
          description: Whether the section is out of date
          readOnly: true
        parent_section_id:
          type: integer
          format: int64
          description: The id of the section to which this section belongs. Only writable for Guide Enterprise customers
          nullable: true
        position:
          type: integer
          format: int64
          description: The position of this section in the section list. Used when sorting is set to ´manual´. By default the section is added to the end of the list
        source_locale:
          type: string
          description: The source (default) locale of the section
          readOnly: true
        theme_template:
          type: string
          description: The theme template name used to display this section in Help Center.
          example: section_template
        updated_at:
          type: string
          description: The time at which the section was last updated
          readOnly: true
        url:
          type: string
          description: The API url of this section
          readOnly: true
      example:
        category_id: 3465
        description: This section contains tricks for the airborne
        id: 1635
        locale: en-us
        name: Avionics
      required:
        - name
        - locale
    SectionPutRequest:
      type: object
      properties:
        section:
          type: object
          properties:
            category_id:
              type: integer
              format: int64
              description: The id of the category to which this section belongs
            description:
              type: string
              description: The description of the section
            name:
              type: string
              description: The name of the section
            parent_section_id:
              type: integer
              format: int64
              description: The id of the section to which this section belongs. Only writable for Guide Enterprise customers
            position:
              type: integer
              format: int64
              description: The position of this section in the section list. Used when sorting is set to ´manual´.
            sorting:
              type: string
              description: Defines the type of sorting used in this section
              enum:
                - manual
                - title
                - creation_desc
                - creation_asc
            theme_template:
              type: string
              description: The theme template name used to display this section in Help Center.
              example: section_template
      required:
        - section
    SectionResponse:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/Section'
    SectionsResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
    SubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/ContentSubscription'
    Ticket:
      type: object
      properties:
        allow_attachments:
          type: boolean
          description: Permission for agents to add attachments to a comment. Defaults to true
          readOnly: true
        allow_channelback:
          type: boolean
          description: Is false if channelback is disabled, true otherwise. Only applicable for channels framework ticket
          readOnly: true
        assignee_email:
          type: string
          description: Write only. The email address of the agent to assign the ticket to
          writeOnly: true
        assignee_id:
          type: integer
          format: int64
          description: The agent currently assigned to the ticket
        attribute_value_ids:
          type: array
          description: Write only. An array of the IDs of attribute values to be associated with the ticket
          items:
            type: integer
            format: int64
          writeOnly: true
        brand_id:
          type: integer
          format: int64
          description: The id of the brand this ticket is associated with. See [Setting up multiple brands](https://support.zendesk.com/hc/en-us/articles/4408829476378)
        collaborator_ids:
          type: array
          description: The ids of users currently CC'ed on the ticket
          items:
            type: integer
            format: int64
        collaborators:
          type: array
          description: POST requests only. Users to add as cc's when creating a ticket. See [Setting Collaborators](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-collaborators)
          items:
            $ref: '#/components/schemas/Collaborator'
        comment:
          type: object
          description: Write only. An object that adds a comment to the ticket. See [Ticket comments](developer.zendesk.com/api-reference/ticketing/tickets/ticket_comments/). To include an attachment with the comment, see [Attaching files](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#attaching-files). A ticket can contain up to 5000 comments in total, including both public and private comments. Once this limit is reached, any additional attempts to add comments results in a 422 error. The ticket can still be updated in other ways, provided that no new comments are added.
          writeOnly: true
        created_at:
          type: string
          format: date-time
          description: When this record was created
          readOnly: true
        custom_fields:
          type: array
          description: Custom fields for the ticket. See [Setting custom field values](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-custom-field-values)
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                description: The id of the custom field
              value:
                type: string
                description: The value of the custom field
        custom_status_id:
          type: integer
          format: int64
          description: The custom ticket status id of the ticket. See [custom ticket statuses](#custom-ticket-statuses)
        description:
          type: string
          description: |
            Read-only first comment on the ticket. When [creating a ticket](#create-ticket), use `comment` to set the description. See [Description and first comment](#description-and-first-comment)
          readOnly: true
        due_at:
          type: string
          format: date-time
          description: If this is a ticket of type "task" it has a due date.  Due date format uses [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format
          nullable: true
        email_cc_ids:
          type: array
          description: The ids of agents or end users currently CC'ed on the ticket. Ignored when [CCs and followers](https://support.zendesk.com/hc/en-us/articles/360020585233) is not enabled
          items:
            type: integer
            format: int64
        email_ccs:
          type: object
          description: Write only. An array of objects that represents agent or end users email CCs to add or delete from the ticket. See [Setting email CCs](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-email-ccs). Ignored when [CCs and followers](https://support.zendesk.com/hc/en-us/articles/360020585233) is not enabled
          writeOnly: true
        external_id:
          type: string
          description: An id you can use to link Zendesk Support tickets to local records
        follower_ids:
          type: array
          description: The ids of agents currently following the ticket. Ignored when [CCs and followers](https://support.zendesk.com/hc/en-us/articles/360020585233) is not enabled
          items:
            type: integer
            format: int64
        followers:
          type: object
          description: Write only. An array of objects that represents agent followers to add or delete from the ticket. See [Setting followers](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-followers). Ignored when [CCs and followers](https://support.zendesk.com/hc/en-us/articles/360020585233) is not enabled
          writeOnly: true
        followup_ids:
          type: array
          description: The ids of the followups created from this ticket. Ids are only visible once the ticket is closed
          items:
            type: integer
            format: int64
          readOnly: true
        forum_topic_id:
          type: integer
          format: int64
          description: The topic in the Zendesk Web portal this ticket originated from, if any. The Web portal is deprecated
          readOnly: true
        from_messaging_channel:
          type: boolean
          description: If true, the ticket's [via type](/documentation/ticketing/reference-guides/via-object-reference/) is a messaging channel.
          readOnly: true
        generated_timestamp:
          type: integer
          format: int64
          description: A Unix timestamp that represents the most accurate reading of when this record was last updated. It is updated for all ticket updates, including system updates
          readOnly: true
        group_id:
          type: integer
          format: int64
          description: The group this ticket is assigned to
        has_incidents:
          type: boolean
          description: Is true if a ticket is a problem type and has one or more incidents linked to it. Otherwise, the value is false.
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the ticket is created
          readOnly: true
        is_public:
          type: boolean
          description: Is true if any comments are public, false otherwise
          readOnly: true
        macro_id:
          type: integer
          format: int64
          description: Write only. A macro ID to be recorded in the ticket audit
          writeOnly: true
        macro_ids:
          type: array
          description: POST requests only. List of macro IDs to be recorded in the ticket audit
          items:
            type: integer
            format: int64
        metadata:
          type: object
          description: Write only. Metadata for the audit. In the `audit` object, the data is specified in the `custom` property of the `metadata` object. See [Setting Metadata](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-metadata)
          writeOnly: true
        organization_id:
          type: integer
          format: int64
          description: The organization of the requester. You can only specify the ID of an organization associated with the requester. See [Organization Memberships](developer.zendesk.com/api-reference/ticketing/organizations/organization_memberships/)
        priority:
          type: string
          description: The urgency with which the ticket should be addressed
          enum:
            - urgent
            - high
            - normal
            - low
        problem_id:
          type: integer
          format: int64
          description: For tickets of type "incident", the ID of the problem the incident is linked to
        raw_subject:
          type: string
          description: |
            The dynamic content placeholder, if present, or the "subject" value, if not. See [Dynamic Content Items](developer.zendesk.com/api-reference/ticketing/ticket-management/dynamic_content/)
        recipient:
          type: string
          description: The original recipient e-mail address of the ticket. Notification emails for the ticket are sent from this address
        requester:
          type: object
          description: Write only. See [Creating a ticket with a new requester](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#creating-a-ticket-with-a-new-requester)
          writeOnly: true
        requester_id:
          type: integer
          format: int64
          description: The user who requested this ticket
        safe_update:
          type: boolean
          description: Write only. Optional boolean. When true and an `update_stamp` date is included, protects against ticket update collisions and returns a message to let you know if one occurs. See [Protecting against ticket update collisions](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#protecting-against-ticket-update-collisions). A value of false has the same effect as true. Omit the property to force the updates to not be safe
          writeOnly: true
        satisfaction_rating:
          type: object
          description: The satisfaction rating of the ticket, if it exists, or the state of satisfaction, "offered" or "unoffered". The value is null for plan types that don't support CSAT
          additionalProperties: true
          readOnly: true
        sharing_agreement_ids:
          type: array
          description: The ids of the sharing agreements used for this ticket
          items:
            type: integer
            format: int64
        status:
          type: string
          description: |
            The state of the ticket.

            If your account has activated custom ticket statuses, this is the ticket's
            status category. See [custom ticket statuses](#custom-ticket-statuses)
          enum:
            - new
            - open
            - pending
            - hold
            - solved
            - closed
        subject:
          type: string
          description: |
            The value of the subject field for this ticket. See [Subject](developer.zendesk.com/api-reference/ticketing/tickets/tickets/#subject)
        submitter_id:
          type: integer
          format: int64
          description: The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket
        tags:
          type: array
          description: The array of tags applied to this ticket. Unless otherwise specified, the [set tag](developer.zendesk.com/api-reference/ticketing/ticket-management/tags/#set-tags) behavior is used, which overwrites and replaces existing tags
          items:
            type: string
        ticket_form_id:
          type: integer
          format: int64
          description: Enterprise only. The id of the ticket form to render for the ticket
        type:
          type: string
          description: The type of this ticket
          enum:
            - problem
            - incident
            - question
            - task
        updated_at:
          type: string
          format: date-time
          description: When this record last got updated. It is updated only if the update generates a [ticket event](#incremental-ticket-event-export)
          readOnly: true
        updated_stamp:
          type: string
          description: Write only. Datetime of last update received from API. See the `safe_update` property
          writeOnly: true
        url:
          type: string
          description: The API url of this ticket
          readOnly: true
        via:
          type: object
          description: For more information, see the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)
          properties:
            channel:
              type: string
              description: |
                This tells you how the ticket or event was created. Examples: "web", "mobile", "rule", "system"
            source:
              type: object
              description: |
                For some channels a source object gives more information about how or why the ticket or event was created
              additionalProperties: true
        via_followup_source_id:
          type: integer
          format: int64
          description: POST requests only. The id of a closed ticket when creating a follow-up ticket. See [Creating a follow-up ticket](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#creating-a-follow-up-ticket)
        via_id:
          type: integer
          format: int64
          description: Write only. For more information, see the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference/)
          writeOnly: true
        voice_comment:
          type: object
          description: Write only. See [Creating voicemail ticket](developer.zendesk.com/api-reference/voice/talk-partner-edition-api/reference/#creating-voicemail-tickets)
          writeOnly: true
      example:
        assignee_id: 235323
        collaborator_ids:
          - 35334
          - 234
        created_at: "2009-07-20T22:55:29Z"
        custom_fields:
          - id: 27642
            value: "745"
          - id: 27648
            value: "yes"
        custom_status_id: 123
        description: The fire is very colorful.
        due_at: null
        external_id: ahg35h3jh
        follower_ids:
          - 35334
          - 234
        from_messaging_channel: false
        generated_timestamp: 1304553600
        group_id: 98738
        has_incidents: false
        id: 35436
        organization_id: 509974
        priority: high
        problem_id: 9873764
        raw_subject: '{{dc.printer_on_fire}}'
        recipient: support@company.com
        requester_id: 20978392
        satisfaction_rating:
          comment: Great support!
          id: 1234
          score: good
        sharing_agreement_ids:
          - 84432
        status: open
        subject: Help, my printer is on fire!
        submitter_id: 76872
        tags:
          - enterprise
          - other_tag
        type: incident
        updated_at: "2011-05-05T10:38:52Z"
        url: https://company.zendesk.com/api/v2/tickets/35436.json
        via:
          channel: web
      required:
        - requester_id
    TicketCountResponse:
      type: object
      properties:
        count:
          type: object
          properties:
            refreshed_at:
              type: string
              format: date-time
            value:
              type: integer
              format: int64
    TicketCreateInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/TicketUpdateInput'
        - type: object
          properties:
            brand_id:
              type: integer
              format: int64
              description: Enterprise only. The id of the brand this ticket is associated with
            collaborators:
              type: array
              description: POST requests only. Users to add as cc's when creating a ticket. See [Setting Collaborators](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-collaborators)
              items:
                $ref: '#/components/schemas/Collaborator'
            email_cc_ids:
              type: array
              description: The ids of agents or end users currently CC'ed on the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233) in the Support Help Center
              items:
                type: integer
                format: int64
            follower_ids:
              type: array
              description: The ids of agents currently following the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233)
              items:
                type: integer
                format: int64
            macro_ids:
              type: array
              description: POST requests only. List of macro IDs to be recorded in the ticket audit
              items:
                type: integer
                format: int64
            raw_subject:
              type: string
              description: |
                The dynamic content placeholder, if present, or the "subject" value, if not. See [Dynamic Content Items](developer.zendesk.com/api-reference/ticketing/ticket-management/dynamic_content/)
            recipient:
              type: string
              description: The original recipient e-mail address of the ticket
            submitter_id:
              type: integer
              format: int64
              description: The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket
            ticket_form_id:
              type: integer
              format: int64
              description: Enterprise only. The id of the ticket form to render for the ticket
            via:
              $ref: '#/components/schemas/Via'
            via_followup_source_id:
              type: integer
              format: int64
              description: POST requests only. The id of a closed ticket when creating a follow-up ticket. See [Creating a follow-up ticket](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#creating-a-follow-up-ticket)
          required:
            - comment
      example:
        comment:
          body: The smoke is very colorful.
        priority: urgent
        subject: My printer is on fire!
    TicketCreateRequest:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/TicketCreateInput'
    TicketsCreateRequest:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/TicketCreateInput'
    TicketResponse:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/Ticket'
    TicketsResponse:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    TicketUpdateInput:
      type: object
      properties:
        additional_collaborators:
          type: array
          description: An array of numeric IDs, emails, or objects containing name and email properties. See [Setting Collaborators](developer.zendesk.com/api-reference/ticketing/tickets/tickets/#setting-collaborators). An email notification is sent to them when the ticket is updated
          items:
            $ref: '#/components/schemas/Collaborator'
        assignee_email:
          type: string
          format: email
          description: The email address of the agent to assign the ticket to
        assignee_id:
          type: integer
          description: The agent currently assigned to the ticket
        attribute_value_ids:
          type: array
          description: An array of the IDs of attribute values to be associated with the ticket
          items:
            type: integer
        collaborator_ids:
          type: array
          description: The ids of users currently CC'ed on the ticket
          items:
            type: integer
        comment:
          $ref: '#/components/schemas/TicketComment'
        custom_fields:
          type: array
          description: Custom fields for the ticket. See [Setting custom field values](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-custom-field-values)
          items:
            $ref: '#/components/schemas/CustomField'
        custom_status_id:
          type: integer
          description: The custom ticket status id of the ticket. See [custom ticket statuses](#custom-ticket-statuses)
        due_at:
          type: string
          format: date-time
          description: If this is a ticket of type "task" it has a due date.  Due date format uses [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format.
          nullable: true
        email_ccs:
          type: array
          description: An array of objects that represent agent or end users email CCs to add or delete from the ticket. See [Setting email CCs](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-email-ccs)
          items:
            $ref: '#/components/schemas/EmailCC'
        external_id:
          type: string
          description: An id you can use to link Zendesk Support tickets to local records
        followers:
          type: array
          description: An array of objects that represent agent followers to add or delete from the ticket. See [Setting followers](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-followers)
          items:
            $ref: '#/components/schemas/Follower'
        group_id:
          type: integer
          description: The group this ticket is assigned to
        organization_id:
          type: integer
          description: The organization of the requester. You can only specify the ID of an organization associated with the requester. See [Organization Memberships](developer.zendesk.com/api-reference/ticketing/organizations/organization_memberships/)
        priority:
          type: string
          description: The urgency with which the ticket should be addressed.
          enum:
            - urgent
            - high
            - normal
            - low
        problem_id:
          type: integer
          description: For tickets of type "incident", the ID of the problem the incident is linked to
        requester_id:
          type: integer
          description: The user who requested this ticket
        safe_update:
          type: boolean
          description: Optional boolean. Prevents updates with outdated ticket data (`updated_stamp` property required when true)
        sharing_agreement_ids:
          type: array
          description: An array of the numeric IDs of sharing agreements. Note that this replaces any existing agreements
          items:
            type: integer
        status:
          type: string
          description: |
            The state of the ticket.

            If your account has activated custom ticket statuses, this is the ticket's
            status category. See [custom ticket statuses](#custom-ticket-statuses).
          enum:
            - new
            - open
            - pending
            - hold
            - solved
            - closed
        subject:
          type: string
          description: The value of the subject field for this ticket
        tags:
          type: array
          description: The array of tags applied to this ticket
          items:
            type: string
        type:
          type: string
          description: The type of this ticket.
          enum:
            - problem
            - incident
            - question
            - task
        updated_stamp:
          type: string
          format: date-time
          description: Datetime of last update received from API. See the safe_update property
      example:
        comment:
          body: The smoke is very colorful.
        priority: urgent
        subject: My printer is on fire!
    TicketAuditVia:
      type: object
      description: Describes how the object was created. See the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)
      properties:
        channel:
          type: string
          description: 'This tells you how the ticket or event was created. Examples: "web", "mobile", "rule", "system"'
          readOnly: true
        source:
          type: object
          description: For some channels a source object gives more information about how or why the ticket or event was created
          additionalProperties: true
          readOnly: true
    TicketComment:
      type: object
      properties:
        attachments:
          type: array
          description: Attachments, if any. See [Attachment](developer.zendesk.com/api-reference/ticketing/tickets/ticket-attachments/)
          items:
            $ref: '#/components/schemas/Attachment'
          readOnly: true
        audit_id:
          type: integer
          description: The id of the ticket audit record. See [Show Audit](developer.zendesk.com/api-reference/ticketing/tickets/ticket_audits/#show-audit)
          readOnly: true
        author_id:
          type: integer
          description: The id of the comment author. See [Author id](#author-id)
        body:
          type: string
          description: The comment string. See [Bodies](#bodies)
        created_at:
          type: string
          format: date-time
          description: The time the comment was created
          readOnly: true
        html_body:
          type: string
          description: The comment formatted as HTML. See [Bodies](#bodies)
        id:
          type: integer
          description: Automatically assigned when the comment is created
          readOnly: true
        metadata:
          type: object
          description: System information (web client, IP address, etc.) and comment flags, if any. See [Comment flags](#comment-flags)
          additionalProperties: true
          readOnly: true
        plain_body:
          type: string
          description: The comment presented as plain text. See [Bodies](#bodies)
          readOnly: true
        public:
          type: boolean
          description: true if a public comment; false if an internal note. The initial value set on ticket creation persists for any additional comment unless you change it
        type:
          type: string
          description: '`Comment` or `VoiceComment`. The JSON object for adding voice comments to tickets is different. See [Adding voice comments to tickets](/documentation/ticketing/managing-tickets/adding-voice-comments-to-tickets)'
          readOnly: true
        uploads:
          type: array
          description: List of tokens received from [uploading files](developer.zendesk.com/api-reference/ticketing/tickets/ticket-attachments/#upload-files) for comment attachments. The files are attached by creating or updating tickets with the tokens. See [Attaching files](developer.zendesk.com/api-reference/ticketing/tickets/tickets/#attaching-files) in Tickets
          items:
            type: string
        via:
          $ref: '#/components/schemas/TicketAuditVia'
      example:
        attachments:
          - content_type: text/plain
            content_url: https://company.zendesk.com/attachments/crash.log
            file_name: crash.log
            id: 498483
            size: 2532
            thumbnails: [ ]
        author_id: 123123
        body: Thanks for your help!
        created_at: "2009-07-20T22:55:29Z"
        id: 1274
        metadata:
          system:
            client: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
            ip_address: 1.1.1.1
            latitude: -37.000000000001
            location: Melbourne, 07, Australia
            longitude: 144.0000000000002
          via:
            channel: web
            source:
              from: { }
              rel: web_widget
              to: { }
        public: true
        type: Comment
    Topic:
      type: object
      description: |
        The `manageable_by` attribute takes one of the following values:

        | Value     | Users                       |
        |-----------|---------------------------- |
        | staff     | agents and managers         |
        | managers  | only Help Center managers   |

        Note that `manageable_by` is only displayed to users who can manage the topic.
      properties:
        created_at:
          type: string
          description: When the topic was created
          readOnly: true
        description:
          type: string
          description: The description of the topic. By default an empty string
          nullable: true
        follower_count:
          type: integer
          format: int64
          description: The number of users following the topic
          readOnly: true
        html_url:
          type: string
          description: The community url of the topic
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the topic is created
          readOnly: true
        manageable_by:
          type: string
          description: The set of users who can manage this topic.
          enum:
            - staff
            - managers
        name:
          type: string
          description: The name of the topic
        position:
          type: integer
          format: int64
          description: The position of the topic relative to other topics in the community
        updated_at:
          type: string
          description: When the topic was last updated
          readOnly: true
        url:
          type: string
          description: The API url of the topic
          readOnly: true
        user_segment_id:
          type: integer
          format: int64
          description: The id of the user segment to which this topic belongs
          nullable: true
      example:
        created_at: "2012-04-04T09:14:57Z"
        description: Security Best Practices
        follower_count: 332
        id: 1635
        manageable_by: staff
        name: Security
      required:
        - name
    TopicResponse:
      type: object
      properties:
        topic:
          $ref: '#/components/schemas/Topic'
    TopicsResponse:
      type: object
      properties:
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
    Translation:
      type: object
      properties:
        body:
          type: string
          description: HTML body of the translation. Empty by default
        created_at:
          type: string
          description: The time at which the translation was created
          readOnly: true
        created_by_id:
          type: integer
          format: int64
          description: The id of the user who created the translation
          readOnly: true
        draft:
          type: boolean
          description: True if the translation is a draft; false otherwise. False by default
        html_url:
          type: string
          description: The url of the translation in Help Center
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when a translation is created
          readOnly: true
        locale:
          type: string
          description: The locale of the translation
        outdated:
          type: boolean
          description: True if the translation is outdated; false otherwise. False by default
        source_id:
          type: integer
          format: int64
          description: The id of the item that has this translation
          readOnly: true
        source_type:
          type: string
          description: The type of the item that has this translation. Can be "article", "section", or "category".
          readOnly: true
        title:
          type: string
          description: The title of the translation
        updated_at:
          type: string
          description: The time at which the translation was last updated
          readOnly: true
        updated_by_id:
          type: integer
          format: int64
          description: The id of the user who last updated the translation
          nullable: true
          readOnly: true
        url:
          type: string
          description: The API url of the translation
          readOnly: true
      example:
        id: 3243452
        locale: en
        source_id: 768934
        source_type: Article
        title: Hello translation
      required:
        - locale
        - title
    TranslationResponse:
      type: object
      properties:
        translation:
          $ref: '#/components/schemas/Translation'
    TranslationsResponse:
      type: object
      properties:
        translations:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
    UnifiedSearchResult:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
          enum:
            - ARTICLE
            - POST
            - EXTERNAL_RECORD
        updated_at:
          type: string
          format: date-time
        url:
          type: string
    UnifiedSearchResultSet:
      type: object
      properties:
        meta:
          type: object
          properties:
            after_cursor:
              type: string
            before_cursor:
              type: string
            has_more:
              type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/UnifiedSearchResult'
    UserSegment:
      type: object
      description: |
        The `user_type` attribute takes one of the following values:

        | Value               | Users                                |
        |---------------------|--------------------------------------|
        | signed_in_users     | only authenticated users             |
        | staff               | only agents and Help Center managers |


        For `group_ids`, `organization_ids`, `tags`, and `or_tags`,
        an empty array means that access is not restricted by the attribute. For example,
        if no group ids are specified, then users don't have to be in any specific group to
        have access.

        For `tags`, a user must have all the listed tags to have access. For `or_tags`, a
        user must have at least one of the listed tags to have access.
      properties:
        added_user_ids:
          type: array
          description: The ids of users added specifically to this user segment, regardless of matching tags or other criteria
          items:
            type: integer
            format: int64
        built_in:
          type: boolean
          description: Whether the user segment is built-in. Built-in user segments cannot be modified
          readOnly: true
        created_at:
          type: string
          description: When the user segment was created
          readOnly: true
        group_ids:
          type: array
          description: The ids of the groups that have access
          items:
            type: integer
            format: int64
        id:
          type: integer
          format: int64
          description: Automatically assigned when the user segment is created
        name:
          type: string
          description: User segment name (localized to the locale of the current user for built-in user segments)
        or_tags:
          type: array
          description: A user must have at least one tag in the list to have access
          items:
            type: string
        organization_ids:
          type: array
          description: The ids of the organizations that have access
          items:
            type: integer
            format: int64
        tags:
          type: array
          description: All the tags a user must have to have access
          items:
            type: string
        updated_at:
          type: string
          description: When the user segment was last updated
          readOnly: true
        user_type:
          type: string
          description: The set of users who can view content
      example:
        built_in: false
        created_at: "2017-07-20T22:55:29Z"
        group_ids:
          - 12
        name: VIP agents
        organization_ids:
          - 42
        tags:
          - vip
        updated_at: "2017-07-23T21:43:28Z"
        user_type: staff
      required:
        - user_type
        - name
    UserSegmentResponse:
      type: object
      properties:
        user_segment:
          $ref: '#/components/schemas/UserSegment'
    UserSegmentsResponse:
      type: object
      properties:
        user_segments:
          type: array
          items:
            $ref: '#/components/schemas/UserSegment'
    UserSubscription:
      type: object
      properties:
        followed_id:
          type: integer
          format: int64
          description: The id of the user being followed
          readOnly: true
        follower_id:
          type: integer
          format: int64
          description: The id of the user doing the following
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the subscription is created
          readOnly: true
      example:
        followed_id: 65466
        follower_id: 98354
        id: 1635
      required:
        - followed_id
        - follower_id
        - id
    UserSubscriptionsResponse:
      type: object
      properties:
        user_subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscription'
    Via:
      type: object
      description: |
        An object explaining how the ticket was created. See the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)
      properties:
        channel:
          type: string
          description: |
            This tells you how the ticket or event was created. Examples: "web", "mobile", "rule", "system"
        source:
          type: object
          description: |
            For some channels a source object gives more information about how or why the ticket or event was created
          properties:
            from:
              type: object
              properties:
                address:
                  type: string
                  nullable: true
                id:
                  type: integer
                  format: int64
                  nullable: true
                name:
                  type: string
                  nullable: true
                title:
                  type: string
                  nullable: true
            rel:
              type: string
              nullable: true
            to:
              type: object
              properties:
                address:
                  type: string
                name:
                  type: string
          additionalProperties: true
      example:
        channel: rule
        source:
          from:
            id: 22472716
            title: Assign to first responder
          rel: trigger
          to: { }
      readOnly: true
    Vote:
      type: object
      properties:
        created_at:
          type: string
          description: The time at which the vote was created
          readOnly: true
        id:
          type: integer
          format: int64
          description: Automatically assigned when the vote is created
          readOnly: true
        item_id:
          type: integer
          format: int64
          description: The id of the item for which this vote was cast
          readOnly: true
        item_type:
          type: string
          description: The type of the item. Can be "Article", "Comment", "Post" or "PostComment"
          readOnly: true
        updated_at:
          type: string
          description: The time at which the vote was last updated
          readOnly: true
        url:
          type: string
          description: The API url of this vote
          readOnly: true
        user_id:
          type: integer
          format: int64
          description: The id of the user who cast this vote
          readOnly: true
        value:
          type: integer
          format: int64
          description: The value of the vote
      example:
        created_at: "2012-04-04T09:14:57Z"
        id: 1635
        item_id: 65466
        item_type: Article
        user_id: 3465
        value: 1
      required:
        - value
    VoteResponse:
      type: object
      properties:
        vote:
          $ref: '#/components/schemas/Vote'
    VotesResponse:
      type: object
      properties:
        votes:
          type: array
          items:
            $ref: '#/components/schemas/Vote'
  parameters:
    ArticleAttachmentId:
      name: article_attachment_id
      in: path
      description: The unique ID of the article attachment
      required: true
      schema:
        type: integer
        format: int64
      example: 1428
    ArticleId:
      name: article_id
      in: path
      description: The unique ID of the article
      required: true
      schema:
        type: integer
        format: int64
      example: 360026053753
    ArticlesSortBy:
      name: sort_by
      in: query
      description: Sorts the articles by one of the accepted values
      schema:
        type: string
        enum:
          - position
          - title
          - created_at
          - updated_at
    CategoryId:
      name: category_id
      in: path
      description: The unique ID of the category
      required: true
      schema:
        type: integer
        format: int64
      example: 360002011513
    CommentId:
      name: comment_id
      in: path
      description: The unique ID of the comment
      required: true
      schema:
        type: integer
        format: int64
      example: 360004163994
    LabelId:
      name: label_id
      in: path
      description: The unique ID of the label
      required: true
      schema:
        type: integer
        format: int64
      example: 360015727233
    OptionalLocale:
      name: locale
      in: path
      description: The locale the item is displayed in. (must be lowercase, even if returned from zendesk as mixed case)
      required: true
      schema:
        type: string
        example: en-us
      example: en-us
    PostCommentId:
      name: post_comment_id
      in: path
      description: The unique ID of the post comment
      required: true
      schema:
        type: integer
        format: int64
      example: 360010837133
    PostId:
      name: post_id
      in: path
      description: The unique ID of the post
      required: true
      schema:
        type: integer
        format: int64
      example: 360039436873
    RequiredLocale:
      name: locale
      in: path
      description: Mandatory locale parameter
      required: true
      schema:
        type: string
        example: en-us
      example: en-us
    SectionId:
      name: section_id
      in: path
      description: The unique ID of the section
      required: true
      schema:
        type: integer
        format: int64
      example: 360004785313
    SortBy:
      name: sort_by
      in: query
      description: Sorts the results by one of the accepted values
      schema:
        type: string
        enum:
          - position
          - created_at
          - updated_at
    SortOrder:
      name: sort_order
      in: query
      description: Selects the order of the results
      schema:
        type: string
        enum:
          - asc
          - desc
    SubscriptionId:
      name: subscription_id
      in: path
      description: The unique ID of the subscription
      required: true
      schema:
        type: integer
        format: int64
      example: 1234
    TicketId:
      name: ticket_id
      in: path
      description: The ID of the ticket
      required: true
      schema:
        type: integer
        format: int64
      example: 123456
    TicketIds:
      name: ids
      in: query
      description: Comma-separated list of ticket ids
      required: true
      schema:
        type: string
      example: 35436,35437
    TopicId:
      name: topic_id
      in: path
      description: The unique ID of the topic
      required: true
      schema:
        type: integer
        format: int64
      example: 360001326113
    TranslationId:
      name: translation_id
      in: path
      description: The unique ID of the translation
      required: true
      schema:
        type: integer
        format: int64
      example: 1234
    UserId:
      name: user_id
      in: path
      description: The unique ID of the user
      required: true
      schema:
        type: integer
        format: int64
      example: 1234
    UserSegmentId:
      name: user_segment_id
      in: path
      description: The unique ID of the user segment
      required: true
      schema:
        type: integer
        format: int64
      example: 1234
    VoteId:
      name: vote_id
      in: path
      description: The unique ID of the vote
      required: true
      schema:
        type: integer
        format: int64
      example: 35467
  examples:
    ArticleAttachmentResponseExample:
      value:
        article_attachment:
          article_id: 23
          content_type: application/jpeg
          content_url: https://company.zendesk.com/hc/article_attachments/200109629/logo.jpg
          file_name: logo.jpg
          id: 1428
          inline: true
          locale: en_us
          size: 1428
    ArticleAttachmentsResponseExample:
      value:
        article_attachments:
          - article_id: 23
            content_type: application/jpeg
            content_url: https://company.zendesk.com/hc/article_attachments/200109629/logo.jpg
            file_name: logo.jpg
            id: 1428
            inline: true
            size: 1428
          - article_id: 23
            content_type: application/pdf
            content_url: https://company.zendesk.com/hc/article_attachments/200109629/party_invitation.pdf
            file_name: party_invitation.pdf
            id: 2857
            inline: false
            size: 58298
    ArticleLabelResponseExample:
      value:
        label:
          created_at: "2012-04-04T09:14:57Z"
          id: 2003
          name: instructions
          updated_at: "2012-04-04T09:14:57Z"
          url: https://{subdomain}.zendesk.com/api/v2/help_center/en-us/articles/labels/42.json
    ArticleLabelsResponseExample:
      value:
        labels:
          - created_at: "2012-04-04T09:14:57Z"
            id: 2003
            name: instructions
            updated_at: "2012-04-04T09:14:57Z"
            url: https://{subdomain}.zendesk.com/api/v2/help_center/articles/labels/42.json
    ArticleRequestExample:
      value:
        article:
          body: Use a tripod
          locale: en-us
          permission_group_id: 56
          title: Taking photos in low light
          user_segment_id: 123
        notify_subscribers: false
    ArticleResponseExample:
      value:
        article:
          author_id: 3465
          comments_disabled: true
          content_tag_ids:
            - 01GT23D51Y
            - 01GT23FWWN
          id: 37486578
          locale: en_us
          permission_group_id: 123
          position: 42
          promoted: false
          title: Article title
          user_segment_id: 12
    ArticleSearchResponseExample:
      value:
        results:
          - author_id: 888887
            draft: false
            id: 35467
            locale: en
            permission_group_id: 123
            title: Printing orders
            user_segment_id: 12
    ArticleSubscriptionResponseExample:
      value:
        subscription:
          content_id: 8748733
          id: 35467
          locale: en
          user_id: 888887
    ArticleSubscriptionsResponseExample:
      value:
        subscriptions:
          - content_id: 8748733
            id: 35467
            locale: en
            user_id: 888887
    ArticleUpVoteResponseExample:
      value:
        vote:
          id: 37486578
          value: 1
    ArticlesResponseExample:
      value:
        articles:
          - author_id: 888887
            draft: true
            id: 35467
            locale: en
            permission_group_id: 123
            title: Article title
            user_segment_id: 12
    BadRequestCreateSection:
      value:
        errors:
          parent_section_id:
            - cannot be assigned non-null value on this Guide plan
    BadRequestCreateUserSegment:
      value:
        errors:
          user_type:
            - value `foo` invalid; must be either `staff` or `signed_in_users`
    BadRequestUpdateSection:
      value:
        errors:
          parent_section_id:
            - would result in a cycle
    BadRequestUpdateUserSegment:
      value:
        errors:
          user_type:
            - value `foo` invalid; must be either `staff` or `signed_in_users`
    BlockArticleAttachmentsResponseExample:
      value:
        article_attachments:
          - article_id: 23
            content_type: application/pdf
            content_url: https://company.zendesk.com/hc/article_attachments/200109629/logo.pdf
            file_name: logo.pdf
            id: 1428
            inline: false
            size: 1428
          - article_id: 23
            content_type: application/msword
            content_url: https://company.zendesk.com/hc/article_attachments/200109629/results.doc
            file_name: results.doc
            id: 2857
            inline: false
            size: 234
    CategoriesResponseExample:
      value:
        categories:
          - description: This category contains a collection of Super Hero tricks
            id: 37486578
            locale: en-us
            name: Super Hero Tricks
          - description: All the cool tricks!
            id: 354675463
            locale: en-us
            name: Tips & Tricks
    CategoryResponse:
      value:
        category:
          description: This category contains a collection of Super Hero tricks
          id: 37486578
          locale: en-us
          name: Super Hero Tricks
          position: 2
    CategoryResponseExample:
      value:
        category:
          description: This category contains a collection of Super Hero tricks
          id: 37486578
          locale: en-us
          name: Super Hero Tricks
    CommentResponseExample:
      value:
        comment:
          author_id: 89567
          body: Good info!
          id: 35467
          locale: en
    CommentsResponseExample:
      value:
        comments:
          - author_id: 89567
            body: My printer is on fire
            id: 35467
            locale: en
          - author_id: 89589
            body: My printer is on fire too!
            id: 36221
            locale: en
    CommunityPostSearchResponseExample:
      value:
        results:
          - author_id: 4333787
            id: 4212256
            title: How do I make a return?
    ContentSubscriptionsResponseExample:
      value:
        subscriptions:
          - content_id: 8748733
            content_type: Article
            id: 35467
            locale: en
            user_id: 888887
    CreateuserImageResponseExample:
      value:
        user_image:
          content_type: image/jpeg
          path: /hc/user_images/Bvj4bPDuRd-7d5hFVszvmQ.jpeg
          size: 169846
    HelpCenterSessionResponseExample:
      value:
        current_session:
          csrf_token: 2hYE_3L80UfRteoLN1Z1eDA06lmzHlSyS
    InlineArticleAttachmentsResponseExample:
      value:
        article_attachments:
          - article_id: 23
            content_type: application/jpeg
            content_url: https://company.zendesk.com/hc/article_attachments/200109629/logo.jpg
            file_name: logo.jpg
            id: 1428
            inline: true
            size: 1428
          - article_id: 23
            content_type: application/gif
            content_url: https://company.zendesk.com/hc/article_attachments/200109629/footer.gif
            file_name: footer.gif
            id: 2857
            inline: true
            locale: en_us
            size: 234
    LocalesResponseExample:
      value:
        locales:
          - created_at: "2009-07-20T22:55:29Z"
            id: 1
            locale: en-US
            name: English
            updated_at: "2011-05-05T10:38:52Z"
            url: https://company.zendesk.com/api/v2/locales/en-US.json
          - created_at: "2010-12-23T12:45:22Z"
            id: 8
            locale: de
            name: Deutsch
            updated_at: "2012-04-01T10:44:12Z"
            url: https://company.zendesk.com/api/v2/locales/de.json
    LocalesWithDefaultResponseExample:
      value:
        default_locale: it-it
        locales:
          - de-de
          - en-uk
          - en-us
          - es-419
          - es-es
          - fr-fr
          - it-it
          - ja-jp
          - pt-br
    MissingTranslationsResponseExample:
      value:
        locales:
          - en-us
          - da-dk
    PostCommentResponseExample:
      value:
        comment:
          author_id: 89567
          body: <p>I love my new non-flammable printer!</p>
          id: 35467
    PostCommentsResponseExample:
      value:
        comments:
          - author_id: 89567
            body: My printer is on fire!
            id: 35467
          - author_id: 89589
            body: My printer is on fire too!
            id: 36221
    PostResponseExample:
      value:
        post:
          author_id: 888887
          content_tag_ids:
            - 6776
            - 4545
          featured: true
          id: 35467
          title: Post title
    PostSubscriptionResponseExample:
      value:
        subscription:
          content_id: 8748733
          id: 35467
          locale: en
          user_id: 888887
    PostSubscriptionsResponseExample:
      value:
        subscriptions:
          - content_id: 8748733
            id: 35467
            locale: en
            user_id: 888887
    PostsResponseExample:
      value:
        posts:
          - id: 35467
            title: How do I open the safe
    RequestUserImageUploadResponseExample:
      value:
        upload:
          headers:
            Content-Disposition: attachment; filename="01F1D8HVJ3TK6CZH8HM51YEQRG.jpeg"
            Content-Type: image/jpeg
            X-Amz-Server-Side-Encryption: AES256
          token: 01F1D8HVJ3TK6CZH8HM51YEQRG
          url: https://{subdomain}.zendesk.com.com/aus-uploaded-assets/1/42/01F1D8HVJ3TK6CZH8HM51YEQRG?Content-Type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ACCESSKEY%2F20210322%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210322T152346Z&X-Amz-Expires=3600&X-Amz-Signature=a5fd09fb179fe3dc3e085398423988f1c5fc5f6a6eb66a0c020905f47b72f11b&X-Amz-SignedHeaders=content-disposition%3Bhost%3Bx-amz-server-side-encryption&x-amz-server-side-encryption=AES256
    SectionResponseExample:
      value:
        section:
          description: This section contains articles on flight instruments
          id: 3457836
          locale: en-us
          name: Avionics
          position: 2
    SectionSubscriptionResponseExample:
      value:
        subscription:
          content_id: 8748733
          id: 35467
          locale: en
          user_id: 888887
    SectionSubscriptionsResponseExample:
      value:
        subscriptions:
          - content_id: 8748733
            id: 35467
            locale: en
            user_id: 888887
    SectionsResponseExample:
      value:
        sections:
          - category_id: 888887
            description: This section contains articles on flight instruments
            id: 35467
            locale: en-us
            name: Avionics
          - category_id: 887285
            description: This section contains weather resources for pilots
            id: 36169
            locale: en-us
            name: Weather
    TicketCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    TicketCreateRequestExample:
      value:
        ticket:
          comment:
            body: The smoke is very colorful.
          priority: urgent
          subject: My printer is on fire!
    TicketResponseExample:
      value:
        ticket:
          assignee_id: 235323
          collaborator_ids:
            - 35334
            - 234
          created_at: "2009-07-20T22:55:29Z"
          custom_fields:
            - id: 27642
              value: "745"
            - id: 27648
              value: "yes"
          custom_status_id: 123
          description: The fire is very colorful.
          due_at: null
          external_id: ahg35h3jh
          follower_ids:
            - 35334
            - 234
          from_messaging_channel: false
          generated_timestamp: 1304553600
          group_id: 98738
          has_incidents: false
          id: 35436
          organization_id: 509974
          priority: high
          problem_id: 9873764
          raw_subject: '{{dc.printer_on_fire}}'
          recipient: support@company.com
          requester_id: 20978392
          satisfaction_rating:
            comment: Great support!
            id: 1234
            score: good
          sharing_agreement_ids:
            - 84432
          status: open
          subject: Help, my printer is on fire!
          submitter_id: 76872
          tags:
            - enterprise
            - other_tag
          type: incident
          updated_at: "2011-05-05T10:38:52Z"
          url: https://company.zendesk.com/api/v2/tickets/35436.json
          via:
            channel: web
    TicketsCreateRequestExample:
      value:
        tickets:
          - comment:
              body: The smoke is very colorful.
            priority: urgent
            subject: My printer is on fire!
          - comment:
              body: This is a comment
            priority: normal
            subject: Help
    TicketsResponseExample:
      value:
        tickets:
          - assignee_id: 235323
            collaborator_ids:
              - 35334
              - 234
            created_at: "2009-07-20T22:55:29Z"
            custom_fields:
              - id: 27642
                value: "745"
              - id: 27648
                value: "yes"
            custom_status_id: 123
            description: The fire is very colorful.
            due_at: null
            external_id: ahg35h3jh
            follower_ids:
              - 35334
              - 234
            from_messaging_channel: false
            generated_timestamp: 1304553600
            group_id: 98738
            has_incidents: false
            id: 35436
            organization_id: 509974
            priority: high
            problem_id: 9873764
            raw_subject: '{{dc.printer_on_fire}}'
            recipient: support@company.com
            requester_id: 20978392
            satisfaction_rating:
              comment: Great support!
              id: 1234
              score: good
            sharing_agreement_ids:
              - 84432
            status: open
            subject: Help, my printer is on fire!
            submitter_id: 76872
            tags:
              - enterprise
              - other_tag
            type: incident
            updated_at: "2011-05-05T10:38:52Z"
            url: https://company.zendesk.com/api/v2/tickets/35436.json
            via:
              channel: web
    TopicResponseExample:
      value:
        topic:
          description: Security Best Practices
          id: 35467
          name: Help Center-Tricks
    TopicSubscriptionResponseExample:
      value:
        subscription:
          content_id: 8748733
          id: 35467
          locale: en
          user_id: 888887
    TopicSubscriptionsResponseExample:
      value:
        subscriptions:
          - content_id: 8748733
            id: 35467
            locale: en
            user_id: 888887
    TopicsResponseExample:
      value:
        topics:
          - html_url: https://{subdomain}.zendesk.com/hc/en-us/community/topics/10-Using-Help-Center-Tips-Tricks
            id: 10
            name: Using Help Center - Tips & Tricks
            url: https://{subdomain}.zendesk.com/api/v2/community/topics/10.json
          - html_url: https://{subdomain}.zendesk.com/hc/en/community/topics/11-Using-Help-Center-Getting-Started-Guide
            id: 11
            name: Using Help Center - Getting Started Guide
            url: https://{subdomain}.zendesk.com/api/v2/community/topics/11.json
    TranslationResponseExample:
      value:
        translation:
          id: 634578
          locale: en-us
          source_id: 348756
          source_type: Article
          title: How to take pictures in low light
    TranslationsResponseExample:
      value:
        translations:
          - id: 634578
            locale: en-us
            outdated: true
            source_id: 348756
            source_type: Article
            title: Translation title
    UnifiedSearchResponseExample:
      value:
        meta:
          after_cursor: WzEuMCwxNjld
          before_cursor: WzEuMCwxNjhd
          has_more: true
        results:
          - title: How to make fish stew
            type: ARTICLE
            updated_at: "2021-10-11T15:02:22Z"
            url: http://example.zendesk.com/hc/en-us/articles/38393937-How-to-make-fish-stew
          - title: Latest updates on fish stew
            type: EXTERNAL_RECORD
            updated_at: "2021-11-12T15:02:22Z"
            url: http://example.com/blog/fish-stew-latest
    UserSegmentResponseExample:
      value:
        user_segment:
          built_in: false
          created_at: "2017-05-21T20:01:12Z"
          group_ids:
            - 12
          id: 7284
          name: VIP agents
          or_tags: [ ]
          organization_ids: [ ]
          tags:
            - vip
          updated_at: "2017-05-21T20:01:12Z"
          user_type: staff
    UserSegmentSectionsResponseExample:
      value:
        sections:
          - html_url: https://{subdomain}.zendesk.com/hc/en/sections/3242-A-section-
            id: 3242
            locale: en
            name: A section
            url: https://{subdomain}.zendesk.com/api/v2/help_center/en/sections/3242-A-section-.json
          - html_url: https://{subdomain}.zendesk.com/hc/en/sections/7352-Another-section-
            id: 7352
            locale: en
            name: Another section
            url: https://{subdomain}.zendesk.com/api/v2/help_center/en/sections/7352-Another-section-.json
    UserSegmentTopicsResponseExample:
      value:
        topics:
          - html_url: https://{subdomain}.zendesk.com/hc/en/community/topics/9273-A-topic-
            id: 9273
            name: A topic
            url: https://{subdomain}.zendesk.com/api/v2/community/topics/9273.json
          - html_url: https://{subdomain}.zendesk.com/hc/en/community/topics/2292-Another-topic-
            id: 2292
            name: Another topic
            url: https://{subdomain}.zendesk.com/api/v2/community/topics/2292-Another-topic-.json
    UserSegmentsResponseExample:
      value:
        user_segments:
          - built_in: false
            created_at: "2017-05-21T20:01:12Z"
            group_ids:
              - 12
            id: 7284
            name: VIP agents
            or_tags: [ ]
            organization_ids: [ ]
            tags:
              - vip
            updated_at: "2017-06-30T01:00:25Z"
            user_type: staff
          - built_in: false
            created_at: "2017-04-09T15:33:11Z"
            group_ids: [ ]
            id: 9930
            name: Privileged users
            or_tags: [ ]
            organization_ids:
              - 42
            tags: [ ]
            updated_at: "2017-08-10T18:41:01Z"
            user_type: signed_in_users
    UserSubscriptionsResponseExample:
      value:
        user_subscriptions:
          - followed_id: 8748733
            follower_id: 398452
            id: 35467
    UserVotesResponseExample:
      value:
        votes:
          - id: 35467
            user_id: 888887
            value: -1
    VoteResponseExample:
      value:
        vote:
          id: 35467
          user_id: 888887
          value: -1
